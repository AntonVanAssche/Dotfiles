#!/usr/bin/env bash

# Colors
light_red="\e[91m"
light_cyan="\e[96m"
light_magenta="\e[95m"
white="\e[37m"
blue="\e[34m"
yellow="\e[93m"
reset="\e[39m"

prompt_git() {
	local s='';
	local branchName='';

	# Check if the current directory is in a Git repository.
	git rev-parse --is-inside-work-tree &>/dev/null || return;

	# Check for what branch we’re on.
	# Get the short symbolic ref. If HEAD isn’t a symbolic ref, get a
	# tracking remote branch or tag. Otherwise, get the
	# short SHA for the latest commit, or give up.
	branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
		git describe --all --exact-match HEAD 2> /dev/null || \
		git rev-parse --short HEAD 2> /dev/null || \
		echo '(unknown)')";


	repoUrl="$(git config --get remote.origin.url)";
	if grep -q 'chromium/src.git' <<< "${repoUrl}"; then
		s+='*';
	else
		# Check for uncommitted changes in the index.
		if ! $(git diff --quiet --ignore-submodules --cached); then
			s+='+';
		fi;
		# Check for unstaged changes.
		if ! $(git diff-files --quiet --ignore-submodules --); then
			s+='!';
		fi;
		# Check for untracked files.
		if [ -n "$(git ls-files --others --exclude-standard)" ]; then
			s+='?';
		fi;
		# Check for stashed files.
		if $(git rev-parse --verify refs/stash &>/dev/null); then
			s+='$';
		fi;
	fi;

	[ -n "${s}" ] && s=" [${s}]";

	echo -e "${1}${branchName}${2}${s}";
}

# Highlight the user name when logged in as root.
if [[ "${USER}" == "root" ]]; then
	userStyle="${light_red}";
else
	userStyle="${light_cyan}";
fi;

# Highlight the hostname when connected via SSH.
if [[ "${SSH_TTY}" ]]; then
	hostStyle="${bold}${light_red}";
else
	hostStyle="${light_cyan}";
fi;

# Double line prompt.
# Set the terminal title and prompt.
# PS1="\[\033]0;\W\007\]"; # working directory base name
# PS1+="\[${bold}\]\n"; # newline
# PS1+="\[${light_cyan}\][\A] "; # clock
# PS1+="\[${userStyle}\]\u"; # username
# PS1+="\[${white}\] at ";
# PS1+="\[${hostStyle}\]\h"; # host
# PS1+="\[${white}\] in ";
# PS1+="\[${light_red}\]\w"; # working directory full path
# PS1+="\$(prompt_git \"\[${white}\] on \[${light_magenta}\]\" \"\[${blue}\]\")"; # Git repository details
# PS1+="\n";
# PS1+="\[${light_cyan}\]➜  \[${reset}\]"; # `➜ ` (and reset color)
#
# PS2="\[${yellow}\]→ \[${reset}\]";
# export PS2;

# Single line prompt (Inspired by https://www.reddit.com/r/unixporn/comments/vyqwtq/bspwm_im_in_love_with_decay/).
PS1="\n"; # Inserts a blank line between shell prompts.
PS1+="\e[95m  "; # Pacman symbol.
PS1+="\W"; # Display current working directory (Directory name only).
PS1+="\$(prompt_git \"\[${white}\] on \[${light_magenta}\]\" \"\[${blue}\]\")"; # Git repository details.
PS1+=" \[\e[92m❯\e[94m❯\e[93m❯\e[39m\]  "; # Prompt symbols.
export PS1;

PS2="\[\e[92m❯\e[94m❯\e[93m❯\e[39m\]  "; # Prompt symbols for PS2.
export PS2;
