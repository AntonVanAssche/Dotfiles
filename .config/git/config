[user]
	email = vanasscheanton@gmail.com
	name = Anton
    signingKey = 27683E3E

[alias]
    g = log --graph --pretty=custom
    d = diff
    f = fetch
    a = add
    ap = add -p
    c = commit
    ca = !git add --all && git commit
    cam = commit --amend
    p = push
    pl = pull
    s = status
    cl = clone
    r = reset
    l = log --pretty=custom
    lc = shortlog --email --numbered --summary
    sh = show
    co = checkout
    b = branch
    bd = branch
    bdr = !sh -c 'git push origin --delete ${1} && git bd ${1}' -
    r    = rebase
    ra   = rebase --abort
    rc   = rebase --continue
    ri   = rebase --interactive
    rs   = rebase --skip
    sp   = stash show -p
    nah = "!f(){ git reset --hard; git clean -df; if [ -d ".git/rebase-apply" ] || [ -d ".git/rebase-merge" ]; then git rebase --abort; fi; }; f"
    forget="!git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D"
    forgetlist="!git fetch -p && git branch -vv | awk '/: gone]/{print $1}'"
    fixup = "!git log --oneline --no-decorate --no-merges | fzf -0 --preview 'git show --color=always --format=oneline {1}' | awk '{print $1}' | xargs -r git commit --fixup"
    uncommit = reset --soft HEAD~1
    uc = reset --soft HEAD~1

[color "status"]
    added = green reverse
    changed = yellow reverse
    untracked = red reverse

[core]
	editor = nvim

[help]
    # If a command is mistyped, make Git automatically
    # run the command it thinks the user wanted to type.
    autoCorrect = immediate

[pretty]
    custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                            │          │                │                │                 └─ author name
    #                            │          │                │                └─ message
    #                            │          │                └─ date (relative)
    #                            │          └─ decorations (branch, heads or tags)
    #                            └─ hash (abbreviated)

[include]
    # Load local configs.
    # https://git-scm.com/docs/git-config#_includes
    #
    # [!] The following needs to remain at the end of this file in
    #      order to allow any of the above configs to be overwritten
    #      by the local ones
    path = ~/.gitconfig.local
